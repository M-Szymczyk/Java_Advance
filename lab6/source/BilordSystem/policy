// In this example, for simplicity, we will use a policy file that
// gives global permission to anyone from anywhere. Do not use this
// policy file in a production environment.

grant{
    permission java.net.SocketPermission "*", "listen,accept,resolve,connect";
    permission java.io.FilePermission "<<ALL FILES>>", "read, write, delete, execute";
    permission java.util.PropertyPermission "javafx.preloader", "read";
    permission java.lang.AllPermission "<<ALL FILES>>";
    permission java.util.AllPermission "<<ALL FILES>>";
    permission java.lang.RuntimePermission "shutdownHooks";
    permission java.lang.RuntimePermission "getStackWalkerWithClassReference";
    permission java.util.PropertyPermission "javafx.version", "read";
    permission java.util.PropertyPermission "<<ALL FILES>>", "read";
    permission java.util.PropertyPermission "javafx.verbose", "read";
    permission java.util.PropertyPermission "sun.reflect.debugModuleAccessChecks", "read";
    permission java.lang.RuntimePermission "createClassLoader";
    permission java.lang.RuntimePermission "getClassLoader";
    permission java.lang.RuntimePermission "accessDeclaredMembers";
    permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
    permission java.util.PropertyPermission "javafx.userAgentStylesheetUrl", "read";
    permission java.util.PropertyPermission "javafx.scene.nodeOrientation.RTL", "read";
    permission java.util.PropertyPermission "com.sun.javafx.highContrastTheme", "read";
    permission java.lang.RuntimePermission "accessClassInPackage.jdk.internal.reflect";
    permission java.util.PropertyPermission "java.library.path", "read";
    permission java.util.PropertyPermission "javafx.runtime.version", "read";
    permission java.util.PropertyPermission "javafx.cachedir", "read";
    permission java.lang.RuntimePermission "loadLibrary.C:\Users\Hyperbook\.jdks\corretto-11.0.13\bin\javafx_font.dll";

};


